//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#define BASE 0
#define MATH 1
#define SYMB 2
#define ADJU  3

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        english {
            label = "qnglish";
            bindings = <
       &kp Q        &kp P        &kp H         &kp Y         &kp X        &kp Z            &kp W         &kp D         &kp L        &kp V
       &hrm LGUI E  &hrm LALT A  &hrm LCTRL O  &hrm LSHFT I  &kp U        &kp M            &hrm RSHFT S  &hrm RCTRL T  &hrm RALT R  &hrm RGUI N
&none  &kp J        &none        &none         &kp K         &none        &kp G            &kp F         &kp C         &none        &kp B        &none
                                 &lt 0 ESCAPE  &lt 2 SPACE   &lt 5 TAB    &lt 4 BACKSPACE  &lt 1 ENTER   &lt 6 DELETE
            >;
        };

        symbols {
            bindings = <
       &kp FSLH                      &kp STAR                    &kp MINUS                   &kp PLUS                  &kp HASH         &kp AMPERSAND     &kp EQUAL                  &kp PIPE                              &kp PERCENT                   &kp CARET
       &hrm LEFT_COMMAND LEFT_BRACE  &hrm LEFT_ALT LEFT_BRACKET  &hrm LEFT_CONTROL RS(LPAR)  &hrm LSHIFT SINGLE_QUOTE  &kp LESS_THAN    &kp GREATER_THAN  &hrm RSHIFT DOUBLE_QUOTES  &hrm RIGHT_CONTROL RIGHT_PARENTHESIS  &hrm RIGHT_ALT RIGHT_BRACKET  &hrm RIGHT_COMMAND RIGHT_BRACKET
&none  &kp BACKSLASH                 &none                       &none                       &kp UNDERSCORE            &kp AT           &none             &kp DOLLAR                 &kp GRAVE                             &kp TILDE                     &none                             &none
                                                                 &none                       &none                     &none            &none             &none                      &none
            >;
        };

        en_punctuation {
            bindings = <
       &none  &none         &none          &none    &none      &none              &none      &none      &none            &none
       &none  &kp QUESTION  &kp SEMICOLON  &kp DOT  &kp SQT    &kp DOUBLE_QUOTES  &kp COMMA  &kp COLON  &kp EXCLAMATION  &kp MINUS
&none  &none  &none         &none          &none    &none      &none              &none      &none      &none            &none      &none
                            &none          &none    &none      &none              &none      &none
            >;
        };

        russian {
            bindings = <
       &kp DOT      &kp G        &kp LBKT      &kp S         &kp Z    &kp P  &none  &kp L     &kp K  &kp D
       &hrm LGUI T  &hrm LALT F  &hrm LCTRL J  &hrm LSHFT B  &kp E    &kp V  &kp C  &kp N     &kp H  &kp Y
&none  &kp Q        &kp APOS     &kp W         &kp R         &none    &kp U  &kp A  &kp SEMI  &kp X  &kp COMMA  &none
                                 &none         &none         &none    &none  &none  &none
            >;
        };

        math {
            label = "MATH";
            bindings = <
       &kp ASTERISK  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS     &none  &none            &none      &none          &none
       &kp SLASH     &kp NUMBER_4  &kp N5        &kp N6        &kp MINUS    &none  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_GUI
&none  &kp PERIOD    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp EQUAL    &none  &none            &none      &none          &none          &none
                                   &none         &none         &none        &none  &none            &none
            >;
        };

        navi {
            bindings = <
       &none     &none     &none      &none           &none    &kp HOME  &kp PAGE_UP  &kp PAGE_DOWN  &kp END    &none
       &kp LGUI  &kp LALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp LEFT  &kp UP       &kp DOWN       &kp RIGHT  &kp K_COPY
&none  &none     &none     &none      &none           &none    &none     &kp K_UNDO   &kp K_REDO     &none      &kp K_CUT   &none
                           &none      &none           &none    &none     &none        &none
            >;
        };

        func {
            label = "ADJU";
            bindings = <
       &kp F10  &kp F1  &kp F2  &kp F3  &none     &bt BT_CLR  &bt BT_NXT  &bt BT_PRV  &out OUT_TOG  &none
       &kp F11  &kp F4  &kp F5  &kp F6  &none     &none       &kp RSHIFT  &kp RCTRL   &kp RALT      &kp RGUI
&none  &kp F12  &kp F7  &kp F8  &kp F9  &none     &none       &none       &none       &none         &none     &none
                        &trans  &trans  &trans    &trans      &trans      &trans
            >;
        };
    };
};
